#
# The following transforms override the default sourcetype for GitHub Webhook events.
# Unfortunately, GitHub does not supply the event type in the payload itself, and instead
# sends it in the HTTP Header, which is not accessible without a custom Webhook handler.
# Whilst this approach may be brittle, we can continue to use the standard HEC raw endpoint.
#

#
# Set sourcetype for check_run events
#
[github_webhook_check_run]
REGEX = ^{"action":"[^"]+","(check_run)":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:check_run

#
# Set sourcetype for check_suite events
#
[github_webhook_check_suite]
REGEX = ^{"action":"[^"]+","(check_suite)":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:check_suite

#
# Set sourcetype for comment events
#
[github_webhook_comment]
REGEX = ^{"action":"[^"]+","comment)":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:comment

#
# Set sourcetype for content_reference events
#
[github_webhook_content_reference]
REGEX = ^{"action":"[^"]+","(content_reference)":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:content_reference

#
# Set sourcetype for create events
#
[github_webhook_create]
REGEX = ^{"ref":"[^"]+","ref_type":"(branch|tag)","master_branch"
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:create

#
# Set sourcetype for delete events
#
[github_webhook_delete]
REGEX = ^{"ref":"[^"]+","ref_type":"(branch|tag)"
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:delete

#
# Set sourcetype for deploy_key events
#
[github_webhook_deploy_key]
REGEX = ^{"action":"[^"]+","key)":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:deploy_key

#
# Set sourcetype for deployment events
#
[github_webhook_deployment]
REGEX = ^{"action":"[^"]+","deployment)":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:deployment

#
# Set sourcetype for deployment_status events
#
[github_webhook_deployment_status]
REGEX = ^{"action":"[^"]+","(deployment_status)":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:deployment_status

#
# Set sourcetype for fork events
#
[github_webhook_fork]
REGEX = ^{"forkee":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:fork

#
# Set sourcetype for github_app_authorization events
#
[github_webhook_github_app_authorization]
REGEX = ^{"action":"revoked","sender":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:github_app_authorization

#
# Set sourcetype for gollum events
#
[github_webhook_gollum]
REGEX = ^{"pages":\[
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:gollum

#
# Set sourcetype for installation events
#
[github_webhook_installation]
REGEX = ^{"action":"[^"]+","installation":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:installation

#
# Set sourcetype for installation_repositories events
#
[github_webhook_installation_repositories]
REGEX = ^{"action":"(added|removed)","installation":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:installation_repositories

#
# Set sourcetype for issue_comment events
#
[github_webhook_issue_comment]
REGEX = ^{"action":"created","issue":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:issue_comment

#
# Set sourcetype for issues events
#
[github_webhook_issues]
REGEX = ^{"action":"(?!created)[^"]+","issue":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:issues

#
# Set sourcetype for label events
#
[github_webhook_label]
REGEX = ^{"action":"[^"]+","label":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:label

#
# Set sourcetype for marketplace_purchase events
#
[github_webhook_marketplace_purchase]
REGEX = ^{"action":"[^"]+","effective_date":
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:marketplace_purchase

#
# Set sourcetype for member events
#
[github_webhook_member]
REGEX = ^{"action":"[^"]+","member":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:member

#
# Set sourcetype for membership events
#
[github_webhook_membership]
REGEX = ^{"action":"[^"]+","scope":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:membership

#
# Set sourcetype for meta events
#
[github_webhook_meta]
REGEX = ^{"action":"deleted","hook_id":
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:meta

#
# Set sourcetype for milestone events
#
[github_webhook_milestone]
REGEX = ^{"action":"[^"]+","milestone":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:milestone

#
# Set sourcetype for organization events
#
[github_webhook_organization]
REGEX = ^{"action":"[^"]+","membership":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:organization

#
# Set sourcetype for org_block events
#
[github_webhook_org_block]
REGEX = ^{"action":"[^"]+","blocked_user":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:org_block

#
# Set sourcetype for package events
#
[github_webhook_package]
REGEX = ^{"action":"[^"]+","package":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:package

#
# Set sourcetype for page_build events
#
[github_webhook_page_build]
REGEX = ^{"id":\d+,"build":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:page_build

#
# Set sourcetype for ping events
#
[github_webhook_ping]
REGEX = ^{"zen":"[^"]+","hook_id":
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:ping

#
# Set sourcetype for project_card events
#
[github_webhook_project_card]
REGEX = ^{"action":"[^"]+","project_card":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:project_card

#
# Set sourcetype for project_column events
#
[github_webhook_project_column]
REGEX = ^{"action":"[^"]+","project_column":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:project_column

#
# Set sourcetype for project events
#
[github_webhook_project]
REGEX = ^{"action":"[^"]+","project":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:project

#
# Set sourcetype for public events
#
[github_webhook_public]
REGEX = ^{"repository":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:public

#
# Set sourcetype for pull_request events
#
[github_webhook_pull_request]
REGEX = ^{"action":"[^"]+","number":\d+,"pull_request":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:pull_request

#
# Set sourcetype for pull_request_review events
#
[github_webhook_pull_request_review]
REGEX = ^{"action":"[^"]+","review":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:pull_request_review

#
# Set sourcetype for pull_request_review_comment events
#
[github_webhook_pull_request_review_comment]
REGEX = ^{"action":"[^"]+","comment":{"url":"[^"]+","pull_request_review_id":
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:pull_request_review_comment

#
# Set sourcetype for push events
#
[github_webhook_push]
REGEX = ^{"ref":"[^"]+","before":"[^"]+","after":"[^"]+"
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:push

#
# Set sourcetype for release events
#
[github_webhook_release]
REGEX = ^{"action":"[^"]+","release":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:release

#
# Set sourcetype for repository_dispatch events
#
[github_webhook_repository_dispatch]
REGEX = ^{"action":"on-demand-test","branch":
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:repository_dispatch

#
# Set sourcetype for repository events
#
[github_webhook_repository]
REGEX = ^{"action":"[^"]+","repository":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:repository

#
# Set sourcetype for repository_import events
#
[github_webhook_repository_import]
REGEX = ^{"status":"[^"]+","repository":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:repository_import

#
# Set sourcetype for repository_vulnerability_alert events
#
[github_webhook_repository_vulnerability_alert]
REGEX = ^{"action":"[^"]+","alert":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:repository_vulnerability_alert

#
# Set sourcetype for security_advisory events
#
[github_webhook_security_advisory]
REGEX = ^{"action":"[^"]+","security_advisory":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:security_advisory

#
# Set sourcetype for sponsorship events
#
[github_webhook_sponsorship]
REGEX = ^{"action":"[^"]+","sponsorship":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:sponsorship

#
# Set sourcetype for star events
#
[github_webhook_star]
REGEX = ^{"action":"[^"]+","starred_at":
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:star

#
# Set sourcetype for status events
#
[github_webhook_status]
REGEX = ^{"id":\d+,"sha":"[^"]+","name":
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:status

#
# Set sourcetype for team events
#
[github_webhook_team]
REGEX = ^{"action":"[^"]+","team":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:team

#
# Set sourcetype for team_add events
#
[github_webhook_team_add]
REGEX = ^{"team":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:team_add

#
# Set sourcetype for watch events
#
[github_webhook_watch]
REGEX = ^{"action":"started","repository":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:watch

#
# Set sourcetype for workflow_dispatch events
#
[github_webhook_workflow_dispatch]
REGEX = ^{"inputs":{
DEST_KEY = MetaData:Sourcetype
FORMAT = sourcetype::github:webhook:workflow_dispatch
